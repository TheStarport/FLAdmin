@using Common.Managers;
@using Common.State.ServerEvents;
@inject IServerLifetime Server
@inject DialogService DialogService

<RadzenStack Orientation="Orientation.Vertical" Gap="0.5rem" Class="rz-mt-4 rz-p-4 rz-border-radius-1" @attributes=@Attributes Style="border: var(--rz-grid-cell-border)" >
    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Send command to FLServer</RadzenText>
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
        <RadzenTextBox @bind-Value=@_command Placeholder="command" class="w-100" />
        <RadzenButton Click=@((_) => SendCommand(_command)) Text="Send Command" ButtonStyle="ButtonStyle.Dark" Variant="Variant.Flat" Size="ButtonSize.Small" />
    </RadzenStack>
</RadzenStack>

@code {
    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object>? Attributes { get; set; }

    private string _command = "";

    private void SendCommand(string? cmd)
    {
        if (string.IsNullOrEmpty(cmd))
        {
            DialogService.Alert("The command provided was empty.", "Invalid Command");
            return;
        }

        Server.SendCommandToConsole(cmd);
        _command = "";
    }
}
