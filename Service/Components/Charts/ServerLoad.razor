@using Common.State.ServerLoad;
@inject IState<ServerLoadState> loadState

<div style="display: flex; flex-direction: row; width: 100%;">
    <div style="width: 33%;">
        <RadzenChart>
            <RadzenLineSeries Smooth="false" Data="@_serverLoad" CategoryProperty="Index" Title="Server Load (ms)" LineType="LineType.Solid" ValueProperty="MS">
                <RadzenMarkers MarkerType="MarkerType.Square" />
                <RadzenLegend Visible="false" />
                <RadzenCategoryAxis Visible=false />
            </RadzenLineSeries>
        </RadzenChart>
    </div>
    <div style="width: 33%;">
        <RadzenChart>
            <RadzenLineSeries Smooth="false" Data="@_serverLoad" CategoryProperty="Index" Title="Server Load (ms)" LineType="LineType.Solid" ValueProperty="MS">
                <RadzenMarkers MarkerType="MarkerType.Square" />
                <RadzenLegend Visible="false" />
                <RadzenCategoryAxis Visible=false />
            </RadzenLineSeries>
        </RadzenChart>
    </div>
    <div style="width: 33%;">
        <RadzenChart>
            <RadzenLineSeries Smooth="false" Data="@_serverLoad" CategoryProperty="Index" Title="Server Load (ms)" LineType="LineType.Solid" ValueProperty="MS">
                <RadzenMarkers MarkerType="MarkerType.Square" />
                <RadzenLegend Visible="false" />
                <RadzenCategoryAxis Visible=false />
            </RadzenLineSeries>
        </RadzenChart>
    </div>
</div>
@code {

    class Load
    {
        public uint MS { get; set; }
        public static int TotalIndex { get; set; } = 0;
        public int Index { get; set; }

        public Load(uint ms)
        {
            MS = ms;
            Index = TotalIndex++;
        }
    }

    List<Load> _serverLoad = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        loadState.StateChanged += (_, _) =>
        {
            _serverLoad.Add(new(loadState.Value.ServerLoadMs));
            InvokeAsync(StateHasChanged);
        };
    }
}