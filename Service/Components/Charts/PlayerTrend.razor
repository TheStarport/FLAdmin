@using Common.Managers;
@using Common.State.ServerStats;
@inject IState<ServerStatsState> _state
@inject IStatsManager _statManager

<RadzenChart>
    <RadzenLineSeries Smooth="false" Data="@_playerTrend" CategoryProperty="Key" Title="Player Count" LineType="LineType.Solid" ValueProperty="Value">
        <RadzenMarkers MarkerType="MarkerType.Square" />
        <RadzenLegend Visible="false" />
        <RadzenCategoryAxis Visible=false />
        <ValueAxisTitle Text="Player Count"/>
    </RadzenLineSeries>
</RadzenChart>

@code {
    IEnumerable<KeyValuePair<string, uint>> _playerTrend = Enumerable.Empty<KeyValuePair<string, uint>>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _state.StateChanged += (_, _) =>
        {
            _playerTrend = _statManager.GetPlayerTrend();
            InvokeAsync(StateHasChanged);
        };

        _playerTrend = _statManager.GetPlayerTrend();
    }
}
